╔══════════════════════════════════════════════════════════════════════╗
║                    ARQUITETURA MODERNIZAÇÃO BS ORIZON               ║
║                         Sistema Bradesco                            ║
╚══════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────┐
│                         CAMADA EXTERNA                             │
└─────────────────────────────────────────────────────────────────────┘

    [API Bradesco]                                    [Webhook Bradesco]
         │                                                     │
         │ HTTPS/JSON                               HTTPS/JSON │
         │ (resposta)                                (trigger) │
         ▼                                                     ▼

┌─────────────────────────────────────────────────────────────────────┐
│                      CAMADA GATEWAY/ENTRADA                        │
└─────────────────────────────────────────────────────────────────────┘

    [ms-orizon-gateway]  ◄─────────────────────────►  [API Gateway]
    │ TCP:2177                                      │ HTTPS/JSON
    │ (dados Bradesco)                             │ (autenticação)
    │                                              │
    │              ┌─────────────────────────────────────┐
    │              │        Consulta transação          │
    │              │        (entrega resposta)          │
    │              └─────────────────────────────────────┘
    │                              │
    │                              │ HTTPS/JSON
    │                              ▼

┌─────────────────────────────────────────────────────────────────────┐
│                    CAMADA PROCESSAMENTO                            │
└─────────────────────────────────────────────────────────────────────┘

                         [ms-orizon-api-bradesco]
                              │
                              │ JSON + Metadados
                              │ AMQP/Event
                              ▼
                         [Webhook notificar Bradesco]
                              │
                              │ AMQP/Event
                              │ (crítica bradesco)
                              ▼
                         [ms-orizon-processor-dados]
                              │
                              │ Insert/Query
                              │ TCP/IP
                              ▼

┌─────────────────────────────────────────────────────────────────────┐
│                       CAMADA DADOS                                 │
└─────────────────────────────────────────────────────────────────────┘

                         [MongoDB - Base]
                              │
                              │ publica evento
                              │ AMQP/Event  
                              ▼
                         [Broker AMQ]

┌─────────────────────────────────────────────────────────────────────┐
│                    DETALHAMENTO TÉCNICO                            │
└─────────────────────────────────────────────────────────────────────┘

PROTOCOLOS UTILIZADOS:
• HTTPS/JSON    → Comunicação externa (Webhook in/out)
• AMQP          → Mensageria interna entre microserviços  
• TCP:2177      → Comunicação legada com sistemas Bradesco
• TCP/IP        → Conexões de banco de dados

FLUXO DE DADOS:
1. Webhook Bradesco dispara evento (HTTPS/JSON)
2. API Gateway autentica e roteia requisição
3. ms-orizon-api processa JSON + metadados
4. Dados são persistidos no MongoDB
5. Evento é publicado via Broker AMQ
6. ms-orizon-processor processa evento
7. ms-orizon-gateway entrega dados via TCP:2177
8. Resposta é enviada para API Bradesco

COMPONENTES:
• API Gateway      → Roteamento e autenticação de entrada
• ms-orizon-api    → Processamento de JSON e metadados
• MongoDB          → Persistência de dados transacionais
• Broker AMQ       → Enfileiramento e distribuição de eventos
• ms-orizon-proc   → Processamento de eventos assíncronos
• ms-orizon-gw     → Gateway de saída para sistemas legados

OBSERVAÇÕES:
⚠️  Pontos críticos de monitoramento
🔄  Componentes com alta disponibilidade
📊  Métricas de performance essenciais
🚨  Alertas de falha obrigatórios
